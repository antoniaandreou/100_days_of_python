# Created By: Antonia Andreou
# Created Date: 19th February 2022
# Last Revised By: Antonia Andreou
# Last Revised Date: 21st February 2022

# Modules
from game_data import data
from art import logo, vs
import random
import os


# Functions


def data_persona_pick(data: list, order: list) -> tuple:
    """
    It takes two lists.
    Data is the list of interest consisting of dictionaries.
    Order is a list of numbers the length of data list above, shuffled.
    The function picks the last number from the shuffled list and uses it to retrieve the relevant dictionary from the data list. That index is then removed from the order list so it can not be picked again.
    """
    pick = data[order[-1]]
    order.pop()
    return pick['follower_count'], pick['name'], pick['description'], pick['country']


def persona_presentation(option: tuple) -> str:
    """
    Takes the tuple returned from the 'data_persona_pick' function and presents and the results for the user.
    """
    print(f"Name:\t\t\t{option[1]} \nDescription:\t{option[2]} \nFrom:\t\t\t{option[3]}\n")


def rearrangement(a: tuple) -> tuple:
    """
    a refers to the tuple now being moved forward in the came for another comparison.
    b refers to the new tuple generated by the 'data_persona_pick' function that the player will compare against.
    """
    first_option = a
    second_option = data_persona_pick(data, data_no_list)
    return first_option, second_option


# Main

print(logo)

# Create a list with the length of 'data' from 'game_data.py'. Shuffle the list so the order the personas appear is in fact random each time.
data_no_list = []
for i in range(0, len(data)):
    data_no_list.append(i)
random.shuffle(data_no_list)

# To begin the game we call function 'data_persona_pick' twice and assign it to the two options. Use 'persona_presentation' function to present the results to the player.
first_option = data_persona_pick(data, data_no_list)
count_top = first_option[0]
persona_presentation(first_option)

print(vs)

second_option = data_persona_pick(data, data_no_list)
count_bottom = second_option[0]
persona_presentation(second_option)

score = 0

while score < 48:

    # Determine the right answer for the two options presented to the player.
    if count_top > count_bottom:
        right_ans = 'a'
        print(right_ans)
    else:
        right_ans = 'b'
        print(right_ans)

    # Ask the user to take a guess and save their answer in the 'user_ans' variable.
    user_ans = input("Who has the most followers 'A' or 'B': ").lower()

    # Clear the screen and print the logo again.
    os.system('clear')
    print(logo)

    # If the user gets the right answer, add a point to their score, call the 'rearrangement' function to get new persona options, call the 'persona_presentation' function to present the new options to the user and reallocate the options to the existing variables for the game to continue.
    if user_ans == right_ans:
        score += 1
        options = rearrangement(second_option)
        persona_presentation(options[0])
        print(vs)
        persona_presentation(options[1])
        first_option = options[0]
        second_option = options[1]
        count_top = options[0][0]
        count_bottom = options[1][0]

    # When the player gets the answer wrong, present the player with their final score and break the while loop for the game to end.
    else:
        print(f"You lost! You got {score} answers correct")
        break
else:
    print(f"You lost! You got {score} answers correct")
    print("Hooray, you are AWESOME! You got all of them right!")